A repo of native unit files for systemd, with some Arch-specific features. The
[community] repo contains a package of these units designed to work with the
latest tag of systemd. For more bleeding edge, a PKGBUILD is available in the
AUR [1]. units can be activated by using the systemctl utility, e.g.

  systemctl enable rpcbind.service ...

Which will create symlinks in /etc/system/system pointing to the unit files
residing in /lib/systemd/system.

As an example, here's a (my) simple setup:

/etc/systemd/system
├── dbus-uk.org.thekelleys.dnsmasq.service -> /etc/systemd/system/dnsmasq.service
├── default.target.wants
│   └── microcode.service -> /lib/systemd/system/microcode.service
├── dhcpd@.service
├── dnsmasq.service
├── enable-ksm.service
├── getty.target.wants
│   └── getty@tty1.service -> /lib/systemd/system/getty@.service
├── local-fs.target.wants
├── multi-user.target.wants
│   ├── dnsmasq.service -> /etc/systemd/system/dnsmasq.service
│   ├── enable-ksm.service -> /etc/systemd/system/enable-ksm.service
│   ├── fcron.service -> /lib/systemd/system/fcron.service
│   ├── iptables.service -> /lib/systemd/system/iptables.service
│   ├── mpd.service -> /lib/systemd/system/mpd.service
│   ├── netcon.service -> /etc/systemd/system/netcon.service
│   ├── remote-fs.target -> /lib/systemd/system/remote-fs.target
│   ├── sshdgenkeys.service -> /lib/systemd/system/sshdgenkeys.service
│   ├── syslog-ng.service -> /lib/systemd/system/syslog-ng.service
│   └── vde_switch@tap0.service -> /etc/systemd/system/vde_switch@.service
├── netcon.service
├── sockets.target.wants
│   └── sshd.socket -> /etc/systemd/system/sshd.socket
├── sshd.socket
├── sysinit.target.wants
└── vde_switch@.service

6 directories, 20 files

[1] http://aur.archlinux.org/packages.php?ID=47603

HOW TO CONTRIBUTE
----------------------------------------
So you've got a new unit to two you'd like to contribute. Great! However,
there's a few things to keep in mind:

1) Only Arch Linux benefits if you submit your unit files here. Everyone
using systemd can benefit if you submit your unit file to the upstream
project. Once it's accepted and released by upstream, open a feature request
on Arch's Flyspray to have it included in the repo package.
2) Unit files for packages in the AUR will not be accepted. Should #1 fail
for whatever reason, please contact the maintainer on the AUR and have them
include the units.
3) If you're still keen on submitting your units here, please start a new
branch for your work off of master and create a single commit for each unit
file. If you need to make revisions, rebase and squash them into a single
commit.
4) Test your work. I cannot stress this enough.


LEGAL CRAP
----------------------------------------
All files in this repo are licensed under the MIT license.

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

